// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using Microsoft.EntityFrameworkCore;

namespace EntitySrvr.Models;

[Table("Image")]
[Index("Id", "Comptype", "Compseq", Name = "IX_ID_Type_Seq")]
[Index("Roll", "Reviewed", "Replace", "IncorrectCompany", "Inerror", Name = "IX_Image_privacyreview")]
[Index("Reviewedby", "Revieweddate", Name = "IX_ReviewedBy")]
[Index("Roll", "Frame", Name = "IX_Roll_Frame")]
[Index("Verified", Name = "IX_Verified")]
[Index("Verifiedby", "Verifieddate", Name = "IX_VerifiedBy")]
[Index("Docid", Name = "IX_docid")]
[Index("Dt", Name = "IX_dt")]
[Index("Roll", Name = "idx_Images_Roll")]
public partial class Image
{
    /// <summary>
    /// A unique identifier for this record (autonumber)
    /// </summary>
    [Key]
    [Column("ctr")]
    public int Ctr { get; set; }

    /// <summary>
    /// ID of the company record this image refers to
    /// </summary>
    [Column("id")]
    [StringLength(7)]
    [Unicode(false)]
    public string Id { get; set; }

    /// <summary>
    /// comptype field of the company record this image refers to
    /// </summary>
    [Column("comptype")]
    [StringLength(2)]
    [Unicode(false)]
    public string Comptype { get; set; }

    /// <summary>
    /// compseq of the company record this image refers to
    /// </summary>
    [Column("compseq")]
    [StringLength(5)]
    [Unicode(false)]
    public string Compseq { get; set; }

    /// <summary>
    /// fiing date of the document
    /// </summary>
    [Column("docdate", TypeName = "datetime")]
    public DateTime? Docdate { get; set; }

    /// <summary>
    /// Type of this image record (from filmcodes table)
    /// </summary>
    [Column("doctype")]
    [StringLength(3)]
    [Unicode(false)]
    public string Doctype { get; set; }

    /// <summary>
    /// Number of pages in this document
    /// </summary>
    [Column("doccount")]
    public int? Doccount { get; set; }

    /// <summary>
    /// File name for this document
    /// </summary>
    [Column("docid")]
    [StringLength(255)]
    [Unicode(false)]
    public string Docid { get; set; }

    /// <summary>
    /// userid of the filer who created the image
    /// </summary>
    [Column("userid")]
    [StringLength(50)]
    [Unicode(false)]
    public string Userid { get; set; }

    /// <summary>
    /// Date the image was created
    /// </summary>
    [Column("dt", TypeName = "datetime")]
    public DateTime? Dt { get; set; }

    /// <summary>
    /// microfilm roll number for the permanent copy of this image
    /// </summary>
    [Column("roll")]
    [StringLength(6)]
    [Unicode(false)]
    public string Roll { get; set; }

    /// <summary>
    /// microfilm frame number of the permanent copy of this image
    /// </summary>
    [Column("frame")]
    [StringLength(6)]
    [Unicode(false)]
    public string Frame { get; set; }

    /// <summary>
    /// Has the image been verified 1=yes 0=no
    /// </summary>
    [Column("verified")]
    public bool? Verified { get; set; }

    /// <summary>
    /// Has the image been microfilmed 1=yes 0=0no
    /// </summary>
    [Column("microfilmed")]
    public bool? Microfilmed { get; set; }

    /// <summary>
    /// Has the image been marked in error during verification 1-yes 0=no
    /// </summary>
    [Column("inerror")]
    public bool? Inerror { get; set; }

    /// <summary>
    /// Is the image private 1=yes 0=no
    /// </summary>
    [Column("private")]
    public bool? Private { get; set; }

    /// <summary>
    /// Has the microfilmed image been sent to the microfilm contractor 1=yes 0=no
    /// </summary>
    [Column("sentoff")]
    public bool? Sentoff { get; set; }

    [Column("moved")]
    public bool? Moved { get; set; }

    /// <summary>
    /// has this image been reviewed by the review team 1=yes 0=no
    /// </summary>
    [Column("reviewed")]
    public bool? Reviewed { get; set; }

    /// <summary>
    /// userid of the reviewer
    /// </summary>
    [Column("reviewedby")]
    [StringLength(50)]
    [Unicode(false)]
    public string Reviewedby { get; set; }

    /// <summary>
    /// date the image was reviewed
    /// </summary>
    [Column("revieweddate", TypeName = "datetime")]
    public DateTime? Revieweddate { get; set; }

    [Column("replace")]
    public bool? Replace { get; set; }

    /// <summary>
    /// Userid of the verifier
    /// </summary>
    [Column("verifiedby")]
    [StringLength(50)]
    [Unicode(false)]
    public string Verifiedby { get; set; }

    /// <summary>
    /// Date the image was verified
    /// </summary>
    [Column("verifieddate", TypeName = "datetime")]
    public DateTime? Verifieddate { get; set; }

    /// <summary>
    /// Date this was record was last modified
    /// </summary>
    [Column(TypeName = "datetime")]
    public DateTime? RecordChgDate { get; set; }

    [Column(TypeName = "datetime")]
    public DateTime? RecordAddedDate { get; set; }

    /// <summary>
    /// This imaage record is assigned to the wrong company
    /// </summary>
    public bool? IncorrectCompany { get; set; }

    /// <summary>
    /// Notes field for verification
    /// </summary>
    [StringLength(255)]
    [Unicode(false)]
    public string VerificationNotes { get; set; }

    /// <summary>
    /// Reason this image record was deleted (see deletedimages)
    /// </summary>
    [Column("reason")]
    [StringLength(255)]
    [Unicode(false)]
    public string Reason { get; set; }

    /// <summary>
    /// Reinstatement image for a walkin filer
    /// </summary>
    public bool? PrioritizeForWalkin { get; set; }

    [Column(TypeName = "datetime")]
    public DateTime? DefaultPageCountManuallyAdded { get; set; }
}