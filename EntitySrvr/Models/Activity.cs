// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using Microsoft.EntityFrameworkCore;

namespace EntitySrvr.Models;

[Index("Code", Name = "act_codex")]
[Index("EffDate", Name = "act_efx")]
[Index("Mscompid", "Mscomptyp", "Mscompseq", Name = "act_msidx")]
[Index("Dt", Name = "activities_dtx")]
[Index("Code", "Dt", Name = "acttypedateuserid")]
[Index("Userid", "Code", "Dt", Name = "idx_Activities_UserID_Code_Dt")]
[Index("Userid", Name = "idx_Activities_Userid")]
public partial class Activity
{
    /// <summary>
    /// ID of the company record this activity refers to
    /// </summary>
    [Column("id")]
    [StringLength(7)]
    [Unicode(false)]
    public string Id { get; set; }

    /// <summary>
    /// comptype field of the company record this activity refers to
    /// </summary>
    [Column("comptyp")]
    [StringLength(2)]
    [Unicode(false)]
    public string Comptyp { get; set; }

    /// <summary>
    /// compseq field of the company this activity refers to
    /// </summary>
    [Column("compseq")]
    [StringLength(5)]
    [Unicode(false)]
    public string Compseq { get; set; }

    /// <summary>
    /// No longer in use, replaced by dt field
    /// </summary>
    [Column("datetime")]
    [StringLength(50)]
    [Unicode(false)]
    public string Datetime { get; set; }

    /// <summary>
    /// 3 character code defines activity type - defined in table actions
    /// </summary>
    [Column("code")]
    [StringLength(3)]
    [Unicode(false)]
    public string Code { get; set; }

    /// <summary>
    /// if code is AMD (amendment) two digit amendment subtype - defined in amendtypes
    /// </summary>
    [Column("subcode")]
    [StringLength(2)]
    [Unicode(false)]
    public string Subcode { get; set; }

    /// <summary>
    /// comptype field of additional company referenced by this action, 99 =non-qualified
    /// </summary>
    [Column("mscomptyp")]
    [StringLength(2)]
    [Unicode(false)]
    public string Mscomptyp { get; set; }

    /// <summary>
    /// id field of additional company referenced by this action, 9999999 =non-qualified
    /// </summary>
    [Column("mscompid")]
    [StringLength(7)]
    [Unicode(false)]
    public string Mscompid { get; set; }

    /// <summary>
    /// compseq field of additional company referenced by this action, 99999 =non-qualified
    /// </summary>
    [Column("mscompseq")]
    [StringLength(5)]
    [Unicode(false)]
    public string Mscompseq { get; set; }

    /// <summary>
    /// Date and time this activity became effective
    /// </summary>
    [Column(TypeName = "datetime")]
    public DateTime? EffDate { get; set; }

    /// <summary>
    /// userid of the original filer of this activity
    /// </summary>
    [Column("userid")]
    [StringLength(16)]
    [Unicode(false)]
    public string Userid { get; set; }

    /// <summary>
    /// Date and time this activity was filed
    /// </summary>
    [Column("dt", TypeName = "datetime")]
    public DateTime? Dt { get; set; }

    /// <summary>
    /// Unique identifier for this activity record
    /// </summary>
    [Key]
    [Column("ctr")]
    public int Ctr { get; set; }

    /// <summary>
    /// If mscompid=9999999 (non-qualified) name of the non-qualified entity
    /// </summary>
    [Column("nqname")]
    [StringLength(140)]
    [Unicode(false)]
    public string Nqname { get; set; }

    /// <summary>
    /// The fee charged for this activity
    /// </summary>
    [Column(TypeName = "money")]
    public decimal? Fee { get; set; }

    [Column("noscanok")]
    public bool? Noscanok { get; set; }

    /// <summary>
    /// Reason for deleting this record (see deletedactivities)
    /// </summary>
    [Column("reason")]
    [StringLength(255)]
    [Unicode(false)]
    public string Reason { get; set; }

    [Column("networkaddress")]
    [StringLength(50)]
    [Unicode(false)]
    public string Networkaddress { get; set; }
}